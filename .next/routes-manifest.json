{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [],
  "rewrites": {
    "beforeFiles": [],
    "afterFiles": [],
    "fallback": []
  },
  "dynamicRoutes": [
    {
      "page": "/cast/[name]",
      "regex": "^/cast/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPname": "nxtPname"
      },
      "namedRegex": "^/cast/(?<nxtPname>[^/]+?)(?:/)?$"
    },
    {
      "page": "/search/[query]",
      "regex": "^/search/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPquery": "nxtPquery"
      },
      "namedRegex": "^/search/(?<nxtPquery>[^/]+?)(?:/)?$"
    },
    {
      "page": "/spaces/[id]",
      "regex": "^/spaces/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/spaces/(?<nxtPid>[^/]+?)(?:/)?$"
    },
    {
      "page": "/submit/[id]",
      "regex": "^/submit/([^/]+?)(?:/)?$",
      "routeKeys": {
        "nxtPid": "nxtPid"
      },
      "namedRegex": "^/submit/(?<nxtPid>[^/]+?)(?:/)?$"
    }
  ],
  "staticRoutes": [
    {
      "page": "/",
      "regex": "^/(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/(?:/)?$"
    },
    {
      "page": "/_not-found",
      "regex": "^/_not\\-found(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/_not\\-found(?:/)?$"
    },
    {
      "page": "/bookmarks",
      "regex": "^/bookmarks(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/bookmarks(?:/)?$"
    },
    {
      "page": "/coming-soon",
      "regex": "^/coming\\-soon(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/coming\\-soon(?:/)?$"
    },
    {
      "page": "/dashboard",
      "regex": "^/dashboard(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/dashboard(?:/)?$"
    },
    {
      "page": "/favicon.ico",
      "regex": "^/favicon\\.ico(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/favicon\\.ico(?:/)?$"
    },
    {
      "page": "/jobs",
      "regex": "^/jobs(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/jobs(?:/)?$"
    },
    {
      "page": "/login",
      "regex": "^/login(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/login(?:/)?$"
    },
    {
      "page": "/messages",
      "regex": "^/messages(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/messages(?:/)?$"
    },
    {
      "page": "/my-stories",
      "regex": "^/my\\-stories(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/my\\-stories(?:/)?$"
    },
    {
      "page": "/notifications",
      "regex": "^/notifications(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/notifications(?:/)?$"
    },
    {
      "page": "/post-opportunity",
      "regex": "^/post\\-opportunity(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/post\\-opportunity(?:/)?$"
    },
    {
      "page": "/profile",
      "regex": "^/profile(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/profile(?:/)?$"
    },
    {
      "page": "/reviews",
      "regex": "^/reviews(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/reviews(?:/)?$"
    },
    {
      "page": "/search",
      "regex": "^/search(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/search(?:/)?$"
    },
    {
      "page": "/settings",
      "regex": "^/settings(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/settings(?:/)?$"
    },
    {
      "page": "/settings/account",
      "regex": "^/settings/account(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/settings/account(?:/)?$"
    },
    {
      "page": "/settings/display",
      "regex": "^/settings/display(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/settings/display(?:/)?$"
    },
    {
      "page": "/settings/help",
      "regex": "^/settings/help(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/settings/help(?:/)?$"
    },
    {
      "page": "/settings/notifications",
      "regex": "^/settings/notifications(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/settings/notifications(?:/)?$"
    },
    {
      "page": "/settings/privacy",
      "regex": "^/settings/privacy(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/settings/privacy(?:/)?$"
    },
    {
      "page": "/settings/security",
      "regex": "^/settings/security(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/settings/security(?:/)?$"
    },
    {
      "page": "/signup",
      "regex": "^/signup(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/signup(?:/)?$"
    },
    {
      "page": "/spaces",
      "regex": "^/spaces(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/spaces(?:/)?$"
    },
    {
      "page": "/tickets",
      "regex": "^/tickets(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/tickets(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "rsc",
    "varyHeader": "rsc, next-router-state-tree, next-router-prefetch, next-router-segment-prefetch",
    "prefetchHeader": "next-router-prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc",
    "prefetchSegmentHeader": "next-router-segment-prefetch",
    "prefetchSegmentSuffix": ".segment.rsc",
    "prefetchSegmentDirSuffix": ".segments"
  },
  "rewriteHeaders": {
    "pathHeader": "x-nextjs-rewritten-path",
    "queryHeader": "x-nextjs-rewritten-query"
  }
}